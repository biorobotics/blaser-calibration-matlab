function [fitresult, gof, plane] = fit3DFitPlane(point_x, point_y, point_z)
%CREATEFIT(POINT_X,POINT_Y,POINT_Z)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : point_x
%      Y Input : point_y
%      Z Output: point_z
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 11-Apr-2018 14:26:01

% Example

% Linear model Poly11:
%      f(x,y) = p00 + p10*x + p01*y
% Coefficients (with 95% confidence bounds):
%        p00 =       36.37  (35.88, 36.86)
%        p10 =     -0.1118  (-0.1214, -0.1022)
%        p01 =      -2.023  (-2.06, -1.987)
% 
% Goodness of fit:
%   SSE: 1.728e+05
%   R-square: 0.5115
%   Adjusted R-square: 0.5114
%   RMSE: 3.796


%% Fit: 'untitled fit 1'.
[xData, yData, zData] = prepareSurfaceData( point_x, point_y, point_z );

% Set up fittype and options.
ft = fittype( 'poly11' );

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, [xData, yData], zData );
legend( h, 'untitled fit 1', 'point_z vs. point_x, point_y', 'Location', 'NorthEast' );
% Label axes
xlabel point_x
ylabel point_y
zlabel point_z
grid on
view( -114.8, 4.9 );
axis equal;
xlim([-50 50]);
ylim([-50 50]);
zlim([0 100]);

% store the data
plane.xData = xData;
plane.yData = yData;
plane.zData = zData;
plane.ft = ft;
plane.a = fitresult.p10;
plane.b = fitresult.p01;
plane.c = -1;           
plane.d = fitresult.p00;  



